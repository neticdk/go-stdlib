package xstrings

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestSlugifyDefaultOptions(t *testing.T) {
	testCases := []struct {
		input         string
		expected      string
		lowercase     bool
		decamelize    bool
		transliterate bool
	}{
		{"", "", true, true, true},
		{"", "", true, true, false},
		{"", "", true, false, false},
		{"", "", true, false, true},
		{"", "", false, false, false},
		{"", "", false, false, true},
		{"", "", false, true, true},
		{"", "", false, true, false},
		{"hello world", "hello-world", true, true, true},
		{"hello world", "hello-world", true, true, false},
		{"hello world", "hello-world", true, false, false},
		{"hello world", "hello-world", true, false, true},
		{"hello world", "hello-world", false, false, false},
		{"hello world", "hello-world", false, false, true},
		{"hello world", "hello-world", false, true, true},
		{"hello world", "hello-world", false, true, false},
		{"hello  world", "hello-world", true, true, true},
		{"hello  world", "hello-world", true, true, false},
		{"hello  world", "hello-world", true, false, false},
		{"hello  world", "hello-world", true, false, true},
		{"hello  world", "hello-world", false, false, false},
		{"hello  world", "hello-world", false, false, true},
		{"hello  world", "hello-world", false, true, true},
		{"hello  world", "hello-world", false, true, false},
		{"hello---world", "hello-world", true, true, true},
		{"hello---world", "hello-world", true, true, false},
		{"hello---world", "hello-world", true, false, false},
		{"hello---world", "hello-world", true, false, true},
		{"hello---world", "hello-world", false, false, false},
		{"hello---world", "hello-world", false, false, true},
		{"hello---world", "hello-world", false, true, true},
		{"hello---world", "hello-world", false, true, false},
		{"hello- -world", "hello-world", true, true, true},
		{"hello- -world", "hello-world", true, true, false},
		{"hello- -world", "hello-world", true, false, false},
		{"hello- -world", "hello-world", true, false, true},
		{"hello- -world", "hello-world", false, false, false},
		{"hello- -world", "hello-world", false, false, true},
		{"hello- -world", "hello-world", false, true, true},
		{"hello- -world", "hello-world", false, true, false},
		{"hello - - world", "hello-world", true, true, true},
		{"hello - - world", "hello-world", true, true, false},
		{"hello - - world", "hello-world", true, false, false},
		{"hello - - world", "hello-world", true, false, true},
		{"hello - - world", "hello-world", false, false, false},
		{"hello - - world", "hello-world", false, false, true},
		{"hello - - world", "hello-world", false, true, true},
		{"hello - - world", "hello-world", false, true, false},
		{"-------", "", true, true, true},
		{"-------", "", true, true, false},
		{"-------", "", true, false, false},
		{"-------", "", true, false, true},
		{"-------", "", false, false, false},
		{"-------", "", false, false, true},
		{"-------", "", false, true, true},
		{"-------", "", false, true, false},
		{"-hello world", "hello-world", true, true, true},
		{"-hello world", "hello-world", true, true, false},
		{"-hello world", "hello-world", true, false, false},
		{"-hello world", "hello-world", true, false, true},
		{"-hello world", "hello-world", false, false, false},
		{"-hello world", "hello-world", false, false, true},
		{"-hello world", "hello-world", false, true, true},
		{"-hello world", "hello-world", false, true, false},
		{" hello world ", "hello-world", true, true, true},
		{" hello world ", "hello-world", true, true, false},
		{" hello world ", "hello-world", true, false, false},
		{" hello world ", "hello-world", true, false, true},
		{" hello world ", "hello-world", false, false, false},
		{" hello world ", "hello-world", false, false, true},
		{" hello world ", "hello-world", false, true, true},
		{" hello world ", "hello-world", false, true, false},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", true, true, true},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", true, true, false},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", true, false, false},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", true, false, true},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", false, false, false},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", false, false, true},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", false, true, true},
		{"!@#$%^&*()_+=-`~[]\\{}|;':\",./<>?", "", false, true, false},
		{"HélLø Wörld", "hel-lo-world", true, true, true},
		{"HélLø Wörld", "h-l-l-w-rld", true, true, false},
		{"HélLø Wörld", "h-ll-w-rld", true, false, false},
		{"HélLø Wörld", "hello-world", true, false, true},
		{"HélLø Wörld", "H-lL-W-rld", false, false, false},
		{"HélLø Wörld", "HelLo-World", false, false, true},
		{"HélLø Wörld", "hel-lo-world", false, true, true},
		{"HélLø Wörld", "h-l-l-w-rld", false, true, false},
		{"with.dots.everywhere", "with-dots-everywhere", true, true, true},
		{"with.dots.everywhere", "with-dots-everywhere", true, true, false},
		{"with.dots.everywhere", "with-dots-everywhere", true, false, false},
		{"with.dots.everywhere", "with-dots-everywhere", true, false, true},
		{"with.dots.everywhere", "with-dots-everywhere", false, false, false},
		{"with.dots.everywhere", "with-dots-everywhere", false, false, true},
		{"with.dots.everywhere", "with-dots-everywhere", false, true, true},
		{"with.dots.everywhere", "with-dots-everywhere", false, true, false},
		{"12345", "12345", true, true, true},
		{"12345", "12345", true, true, false},
		{"12345", "12345", true, false, false},
		{"12345", "12345", true, false, true},
		{"12345", "12345", false, false, false},
		{"12345", "12345", false, false, true},
		{"12345", "12345", false, true, true},
		{"12345", "12345", false, true, false},
		{"MixedCase123", "mixed-case-123", true, true, true},
		{"MixedCase123", "mixed-case-123", true, true, false},
		{"MixedCase123", "mixedcase123", true, false, false},
		{"MixedCase123", "mixedcase123", true, false, true},
		{"MixedCase123", "MixedCase123", false, false, false},
		{"MixedCase123", "MixedCase123", false, false, true},
		{"MixedCase123", "mixed-case-123", false, true, true},
		{"MixedCase123", "mixed-case-123", false, true, false},
	}

	for _, tc := range testCases {
		t.Run(tc.input, func(t *testing.T) {
			actual := Slugify(
				tc.input,
				WithDecamelize(tc.decamelize),
				WithLowercase(tc.lowercase),
				WithTransliterate(tc.transliterate),
			)
			assert.Equal(t, tc.expected, actual)
		})
	}
}
